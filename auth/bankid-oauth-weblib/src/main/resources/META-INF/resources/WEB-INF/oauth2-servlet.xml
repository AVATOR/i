<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.0.xsd
       http://www.springframework.org/schema/security/oauth2
       http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd"
       default-autowire="byName">

    <import resource="oauth2-client-context.xml" />

    <context:property-placeholder location="classpath:oauth.properties" />

    <bean id="tokenStore" class="ua.org.bankid.oauth.impl.RedisTokenStore" />

    <bean id="clientDetailsService" class="ua.org.bankid.oauth.BankIdClientDetailsService" />

    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="clientDetailsService" ref="clientDetailsService" />
        <property name="tokenStore" ref="tokenStore" />
        <property name="authenticationManager" ref="authenticationManager" />
    </bean>

    <bean id="authenticationProvider" class="ua.org.bankid.oauth.BankIdAuthenticationProvider" />

    <!-- access decision manager -->
    <bean id="oauthAuthAccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
                <bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter">
                    <property name="scopePrefix" value="scope." />
                </bean>
                <bean class="org.springframework.security.access.vote.RoleVoter">
                    <property name="rolePrefix" value="" />
                </bean>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </list>
        </constructor-arg>
    </bean>

   <!-- <bean id="authenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
-->
    <bean id="authenticationEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="${page.choose.appropriate.bank.redirect.url}"/>
    </bean>

    <bean id="oauth2AccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

    <bean id="oAuth2RestTemplate" class="org.springframework.security.oauth2.client.OAuth2RestTemplate"
          scope="session">
        <constructor-arg name="resource" ref="oAuth2ProtectedResourceDetails" />
        <aop:scoped-proxy/>
    </bean>

    <bean id="oAuth2ProtectedResourceDetails" scope="session"
          class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails">
        <property name="id" value="${egov.service.provider.client.id:hadcoredClientId}" />
        <property name="accessTokenUri" value="/accessTokenUri" />
        <property name="scope" value="scope.view.passport" />
    </bean>

    <bean id="oAuth2AuthenticationProcessingFilter"
          class="org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter">
        <constructor-arg name="defaultFilterProcessesUrl" value="${page.choose.appropriate.bank.redirect.url}"/>
        <property name="restTemplate" ref="oAuth2RestTemplate"/>
        <property name="tokenServices" ref="tokenServices"/>
    </bean>

    <security:global-method-security secured-annotations="enabled"
                                     pre-post-annotations="enabled">
                                     <!--access-decision-manager-ref="oauthAuthAccessDecisionManager">-->
                                     <!--proxy-target-class="true"> -->
        <!--<security:expression-handler ref="securityExpressionHandler"/>-->
    </security:global-method-security>

    <security:http create-session="never"
                   entry-point-ref="authenticationEntryPoint"
                   access-decision-manager-ref="oauthAuthAccessDecisionManager"
                   auto-config="true"
                   use-expressions="true">

        <!-- PUBLIC  -->
        <security:intercept-url pattern="/public/**" access="permitAll"/>

        <!-- RESTRICTED -->
        <!-- SERVICE_PRODUCER - official person (e.g. mayor) -->
        <security:intercept-url pattern="/protected/**"
                                access="hasAnyRole('citizen.role.SERVICE_CONSUMER','citizen.role.SERVICE_PRODUCER')"/>
        <security:intercept-url pattern="/*/consumer/restricted/url/**" access="citizen.role.SERVICE_CONSUMER"/>
        <security:intercept-url pattern="/*/producer/service/url/**" access="citizen.role.SERVICE_PRODUCER "/>

        <security:intercept-url pattern="/*/scope/example/**" method="POST" access="scope.view.passport"/>
        <security:intercept-url pattern="/*/elections/**" method="POST"
                                access="hasAnyRole('scope.vote.president', 'scope.vote.parliament')"/>

        <security:custom-filter ref="oauth2ClientContextFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
        <security:custom-filter ref="oAuth2AuthenticationProcessingFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
        <security:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
        <security:access-denied-handler ref="oauth2AccessDeniedHandler" />
    </security:http>

    <oauth2:client id="oauth2ClientContextFilter" />

    <!-- authorization server on e-gov side -->
    <oauth2:authorization-server client-details-service-ref="clientDetailsService"
                                 token-services-ref="tokenServices"
                                 token-endpoint-url="/oauth/token">
        <oauth2:authorization-code disabled="false"/>
        <oauth2:refresh-token disabled="true"/>
        <oauth2:client-credentials disabled="true"/>
        <oauth2:password disabled="true"/>
    </oauth2:authorization-server>

    <oauth2:resource-server id="resourceServerFilter"
                            resource-id="ProtectedResourceByBankId"
                            token-services-ref="tokenServices" />


    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider"/>
    </security:authentication-manager>

    <!--<security:form-login login-page="/login" default-target-url="/main"-->
                         <!--authentication-failure-url="/loginError"/>-->

</beans>
